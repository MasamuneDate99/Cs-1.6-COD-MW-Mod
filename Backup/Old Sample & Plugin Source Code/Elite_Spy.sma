/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <codmod>
#include <engine>
#include <hamsandwich>
#include <cstrike>
#include <fakemeta>
#include <fun>

#define DMG_BULLET (1<<1)

new identyfikator[33];
new bool: ma_klase[33];
new CT_Skins[4][] = {"sas","gsg9","urban","gign"};
new Terro_Skins[4][] = {"arctic","leet","guerilla","terror"};

new const nazwa[] = "Elite Spy";
new const opis[] = "190percent dmg AWP (+ int), Enemy Cloth , Silent Step ";
new const bronie = 1<<CSW_DEAGLE | 1<<CSW_AWP | 1<<CSW_FLASHBANG;
new const zdrowie = 50;
new const kondycja = 25;
new const inteligencja = 10;
new const wytrzymalosc = 20;

public plugin_init() 
{
	register_plugin(nazwa, "1.0", "QTM_Peyote");
	
	cod_register_class(nazwa, opis, bronie, zdrowie, kondycja, inteligencja, wytrzymalosc);
	RegisterHam(Ham_TakeDamage, "player", "TakeDamage");
	register_event("CurWeapon", "CurWeapon", "be", "1=1")
}

public cod_class_enabled(id)
{
	get_user_name(id, identyfikator, 32);
	if(!equal(identyfikator, "freeds") && !equal(identyfikator, "Revolution_Ace.-") && !equal(identyfikator, "d l KIMj"))
	{
		client_print(id, print_chat, "[ELITE] Do not have permission to use this class.")
		return COD_STOP;
	}
	set_user_footsteps(id, 1);
	ZmienUbranie(id, 0);
	ma_klase[id] = true;
        
        return COD_CONTINUE;
}

public cod_class_disabled(id)
{
	set_user_footsteps(id, 0);
	ma_klase[id] = false;
	ZmienUbranie(id, 1);

}

public plugin_precache()
{
	precache_model("models/rgcod/v_AWPRG.mdl");
}

public CurWeapon(id)
{
	new weapon = read_data(2);

	if(ma_klase[id])
	{
		if(weapon == CSW_AK47)
		{
			set_pev(id, pev_viewmodel2, "models/rgcod/v_AWPRG.mdl")
		}
	}
}


public ZmienUbranie(id,reset)

{
    if (!is_user_connected(id))
        return PLUGIN_CONTINUE; 

    if (reset)
        cs_reset_user_model(id);
    else
    {
        new num = random_num(0,3);
        cs_set_user_model(id, (get_user_team(id) == 1)? CT_Skins[num]: Terro_Skins[num]);
    }
    return PLUGIN_CONTINUE;
}

public TakeDamage(this, idinflictor, idattacker, Float:damage, damagebits)
{
	if(!is_user_connected(idattacker))
		return HAM_IGNORED; 
	
	if(!ma_klase[idattacker])
		return HAM_IGNORED;
	
	if(damagebits & DMG_BULLET)
	{
		new weapon = get_user_weapon(idattacker);
			
		if(weapon == CSW_AWP)
			cod_inflict_damage(idattacker, this, damage* 1.2, 0.5, idinflictor, damagebits);	
	}
	
	return HAM_IGNORED;
}
