/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <codmod>
#include <fakemeta>
#include <engine>
#include <hamsandwich>
#include <fakemeta_util>

#define VERSION "1.0"
#define AUTHOR "author"

new ma_klase[33];
new identyfikator[33];

new skoki[33];

#define DAMAGE 15.0 //Damage trzesienia
#define DAMAGE_INT 1.0 //Ilosc wzrostu damage przy dodaniu 1 pkt inteligencji
#define ODLEGLOSC 200.0 //odleglosc razenia trzesienia

new const nazwa[]   = "Sphere";
new const opis[]    = "7 multijump";
new const bronie    = 1<<CSW_AK47 | 1<<CSW_FLASHBANG | 1<<CSW_ELITE;
new const zdrowie   = 150;
new const kondycja  = 0;
new const inteligencja = 150;
new const wytrzymalosc = 0;
    
public plugin_init() {
	register_plugin(nazwa, "1.0", "d0n tHe Pr0oo")
	
	cod_register_class(nazwa, opis, bronie, zdrowie, kondycja, inteligencja, wytrzymalosc);
	RegisterHam(Ham_Spawn, "player", "fwSpawn", 1);
	register_event("CurWeapon", "CurWeapon", "be", "1=1")
}

public fwSpawn(id)
{
	if(ma_klase[id])
	{
		fm_set_user_gravity(id, 0.4);
    }
}


public cod_class_skill_used(id)
{
	if(!is_user_alive(id) || !ma_klase[id])
		return PLUGIN_CONTINUE;
	
	new flags = pev(id, pev_flags);
	if(!(flags & FL_ONGROUND))
	{
		new Float:velocity[3];
		pev(id, pev_velocity, velocity);
		velocity[2] = -800.0
		set_pev(id, pev_velocity, velocity);
		TrzesienieZiemi(id);
	}	
	
	return PLUGIN_CONTINUE;
}

public cod_class_enabled(id)
{
	get_user_name(id, identyfikator, 32);
	if(!equal(identyfikator, "kira"))
	{
		client_print(id, print_chat, "[ELITE] Do not have permission to use this class.")
		return COD_STOP;
	}
        ma_klase[id] = true;
        return COD_CONTINUE;
}


public cod_class_disabled(id)
{
	ma_klase[id] = 0;
}

public plugin_precache()
{
	precache_model("models/rgcod/v_ak47s.mdl");
}

public CurWeapon(id)
{
	new weapon = read_data(2);

	if(ma_klase[id])
	{
		if(weapon == CSW_AK47)
		{
			set_pev(id, pev_viewmodel2, "models/rgcod/v_ak47s.mdl")
		}
	}
}

public fwCmdStart_MultiJump(id, uc_handle)
{
	if(!is_user_alive(id) || !ma_klase[id])
		return FMRES_IGNORED;

	new flags = pev(id, pev_flags);

	if((get_uc(uc_handle, UC_Buttons) & IN_JUMP) && !(flags & FL_ONGROUND) && !(pev(id, pev_oldbuttons) & IN_JUMP) && skoki[id])
	{
		skoki[id]--;
		new Float:velocity[3];
		pev(id, pev_velocity,velocity);
		velocity[2] = random_float(265.0,285.0);
		set_pev(id, pev_velocity,velocity);
	}
	else if(flags & FL_ONGROUND)
		skoki[id] = 7;

	return FMRES_IGNORED;
}

public TrzesienieZiemi(id)
{
	message_begin(MSG_ONE,get_user_msgid("ScreenShake"),{0,0,0},id);
	write_short(7<<14);
	write_short(1<<13);
	write_short(1<<14);
	message_end();

	new entlist[33];
	new numfound = find_sphere_class(id, "player", ODLEGLOSC, entlist, 32);
	
	for (new i=0; i < numfound; i++)
	{		
		new pid = entlist[i];
		
		if (is_user_alive(pid) && get_user_team(id) != get_user_team(pid))
			cod_inflict_damage(id, pid, DAMAGE, DAMAGE_INT);
	}
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1045\\ f0\\ fs16 \n\\ par }
*/
